group 'com.reto'
version '1.0-SNAPSHOT'
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:2.2.12"
        classpath "net.serenity-bdd:serenity-single-page-report:2.2.12"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0"
    }
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'
//apply plugin: 'test-report-aggregation'
apply plugin: 'org.sonarqube'

repositories {
    mavenCentral()
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

wrapper {
    gradleVersion '8.2.1'
    distributionType Wrapper.DistributionType.ALL
}

ext {
    serenityVersion = '3.4.0'
    serenityVer = '2.6.0'
}

dependencies {

    //implementation "net.serenity-bdd:serenity-ensure:${serenityVer}"

    implementation group: 'net.serenity-bdd', name: 'serenity-core',                 version: serenityVersion
    implementation group: 'net.serenity-bdd', name: 'serenity-junit',                version: serenityVersion
    implementation group: 'net.serenity-bdd', name: 'serenity-screenplay',           version: serenityVersion
    implementation group: 'net.serenity-bdd', name: 'serenity-assertions',           version: serenityVersion
    implementation group: 'net.serenity-bdd', name: 'serenity-ensure',               version: serenityVersion
    implementation group: 'net.serenity-bdd', name: 'serenity-screenplay-rest',      version: serenityVersion
    implementation group: 'net.serenity-bdd', name: 'serenity-cucumber',             version: serenityVersion
    implementation group: 'net.serenity-bdd', name: 'serenity-reports',              version: serenityVersion
    implementation group: 'net.serenity-bdd', name: 'serenity-screenplay-webdriver', version: serenityVersion

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind',            version: '2.11.3'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.11.3'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.14.0'

    implementation group: 'log4j', name: 'log4j', version: '1.2.17'

    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.3.0'

    implementation 'com.github.javafaker:javafaker:1.0.2'

    implementation 'org.projectlombok:lombok:1.18.24'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation 'com.google.code.gson:gson:2.10'

    implementation 'com.oracle.database.jdbc:ojdbc10:19.16.0.0'
    implementation 'org.postgresql:postgresql:42.5.1'

    implementation group: 'com.ibm.mq', name: 'com.ibm.mq.allclient', version: '9.1.1.0'
    testImplementation 'org.slf4j:slf4j-simple:2.0.4'
    implementation 'org.json:json:20220320'
    implementation 'org.apache.logging.log4j:log4j-api:2.13.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.0'
    implementation 'com.jcraft:jsch:0.1.53'
    implementation 'com.codoid.products:fillo:1.18'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'
    implementation 'com.opencsv:opencsv:5.5.2'
    implementation 'com.azure:azure-storage-blob:12.27.1'
}

test {
    String tiporegresion = System.properties['Tiporegresion']
    println "Tipo de regresion recibido por parametro: " + tiporegresion
    systemProperty "Tiporegresion", tiporegresion

    switch (tiporegresion) {
        case "@REGRESION":
            useJUnit()
            include('**/ObtenerTablasMaestrasRunner.class*')
            include('**/ValidarRamosInsigniasVidaRunner.class*')
            include('**/ValidarRamosInsigniasGeneralesRunner.class*')
            include('**/ValidarFiltrosAsesoresRunner.class*')
            include('**/ValidarCargosExcluidosRunner.class*')
            include('**/ValidarCamposReportadosFasecoldaRunner.class*')
            include('**/DescargarArchivosFTPRunner.class*')
            include('**/BuscarArchivosBlobStorageRunner.class*')
            include('**/AdministracionAsesoresDefinitionTalentoHumanoRunner.class*')
            maxParallelForks = 1
            break
    }
    testLogging {
        exceptionFormat = 'full'
    }
}


java {
    setSourceCompatibility JavaVersion.VERSION_17
    setTargetCompatibility JavaVersion.VERSION_17
}

gradle.startParameter.continueOnFailure = true
test.finalizedBy(aggregate)